{"ast":null,"code":"var _jsxFileName = \"/home/user/work/TodoListMaterialUI/src/components/todoList/ListItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { deleteTodo, toggleTodo } from \"../../redux/todos/action\";\nimport { useDispatch } from \"react-redux\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(them => ({\n  listItem: {\n    borderRadius: '5px',\n    transition: 'background-color 0.5s',\n    marginBottom: '10px',\n    hover: {\n      cursor: 'pointer'\n    }\n  },\n  done: {\n    textDecoration: \"line-through\",\n    color: 'grey',\n    display: 'inline-block'\n  },\n  notDone: {\n    color: \"black\",\n    display: \"inline-block\"\n  }\n}));\nexport const ListItem = ({\n  todo\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"space-between\",\n    className: classes.listItem,\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: todo.isDone ? classes.done : classes.notDone,\n      onClick: () => dispatch(toggleTodo(todo)),\n      children: todo.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"delete\",\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n        fontSize: \"medium\",\n        onClick: () => dispatch(deleteTodo(todo))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListItem, \"aFWslISJzTtHlU1qXyXYeeBhNak=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = ListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"sources":["/home/user/work/TodoListMaterialUI/src/components/todoList/ListItem.jsx"],"names":["React","deleteTodo","toggleTodo","useDispatch","Grid","makeStyles","IconButton","DeleteIcon","useStyles","them","listItem","borderRadius","transition","marginBottom","hover","cursor","done","textDecoration","color","display","notDone","ListItem","todo","classes","dispatch","isDone","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,0BAArC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,mBAA/B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,IAAD,KAAW;AACpCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAE,KADR;AAENC,IAAAA,UAAU,EAAE,uBAFN;AAGNC,IAAAA,YAAY,EAAE,MAHR;AAKNC,IAAAA,KAAK,EAAC;AACFC,MAAAA,MAAM,EAAC;AADL;AALA,GAD0B;AAUpCC,EAAAA,IAAI,EAAC;AACDC,IAAAA,cAAc,EAAC,cADd;AAEDC,IAAAA,KAAK,EAAC,MAFL;AAGDC,IAAAA,OAAO,EAAC;AAHP,GAV+B;AAepCC,EAAAA,OAAO,EAAC;AACJF,IAAAA,KAAK,EAAC,OADF;AAEJC,IAAAA,OAAO,EAAC;AAFJ;AAf4B,CAAX,CAAD,CAA5B;AAsBA,OAAO,MAAME,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAChC,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAMgB,QAAQ,GAAGrB,WAAW,EAA5B;AACA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,cAAc,EAAC,eAA/B;AAA+C,IAAA,SAAS,EAAEoB,OAAO,CAACb,QAAlE;AAAA,4BACI;AACI,MAAA,SAAS,EAAEY,IAAI,CAACG,MAAL,GAAcF,OAAO,CAACP,IAAtB,GAA6BO,OAAO,CAACH,OADpD;AAEI,MAAA,OAAO,EAAE,MAAMI,QAAQ,CAACtB,UAAU,CAACoB,IAAD,CAAX,CAF3B;AAAA,gBAIKA,IAAI,CAACI;AAJV;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,UAAD;AAAY,oBAAW,QAAvB;AAAA,6BACI,QAAC,UAAD;AACI,QAAA,QAAQ,EAAC,QADb;AAEI,QAAA,OAAO,EAAE,MAAMF,QAAQ,CAACvB,UAAU,CAACqB,IAAD,CAAX;AAF3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAnBM;;GAAMD,Q;UACOb,S,EACCL,W;;;KAFRkB,Q","sourcesContent":["import React from \"react\";\nimport {deleteTodo, toggleTodo} from \"../../redux/todos/action\";\nimport {useDispatch} from \"react-redux\";\nimport {Grid, makeStyles} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles((them) => ({\n    listItem: {\n        borderRadius: '5px',\n        transition: 'background-color 0.5s',\n        marginBottom: '10px',\n\n        hover:{\n            cursor:'pointer',\n        }\n    },\n    done:{\n        textDecoration:\"line-through\",\n        color:'grey',\n        display:'inline-block'\n    },\n    notDone:{\n        color:\"black\",\n        display:\"inline-block\"\n    }\n}))\n\n\nexport const ListItem = ({todo}) => {\n    const classes = useStyles()\n    const dispatch = useDispatch();\n    return (\n        <Grid container justifyContent=\"space-between\" className={classes.listItem}>\n            <li\n                className={todo.isDone ? classes.done : classes.notDone}\n                onClick={() => dispatch(toggleTodo(todo))}\n            >\n                {todo.value}\n            </li>\n            <IconButton aria-label=\"delete\">\n                <DeleteIcon\n                    fontSize=\"medium\"\n                    onClick={() => dispatch(deleteTodo(todo))}\n                />\n            </IconButton>\n        </Grid>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}